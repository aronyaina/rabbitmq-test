apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: rabbit
spec:
  serviceName: rabbit
  replicas: 3
  selector:
    matchLabels:
      app: rabbitmq
  volumeClaimTemplates:
  - metadata:
      name: rabbitmq-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "microk8s-hostpath"
      resources:
        requests:
          storage: 5Gi  
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      serviceAccountName: rabbitmq
      initContainers:
      - name: "rabbitmq-config"
        image: busybox
        volumeMounts:
        - name: rabbitmq-config
          mountPath: /tmp/rabbitmq
        - name: rabbitmq-config-rw
          mountPath: /etc/rabbitmq
        command:
        - sh
        - -c
        - cp /tmp/rabbitmq/rabbitmq.conf /etc/rabbitmq/rabbitmq.conf && echo '' >> /etc/rabbitmq/rabbitmq.conf; cp /tmp/rabbitmq/enabled_plugins /etc/rabbitmq/enabled_plugins
      volumes:
      - name: rabbitmq-config
        configMap:
          name: rabbitmq-config
          items:
          - key: enabled_plugins
            path: "enabled_plugins"
          - key: rabbitmq.conf
            path: "rabbitmq.conf"
      - name: rabbitmq-config-rw
        emptyDir: {}
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsGroup: 999

      containers:
      - name: rabbitmq
        image: rabbitmq:4.0-management
        volumeMounts:
        - name: rabbitmq-config-rw
          mountPath: "/etc/rabbitmq"
        - name: rabbitmq-data
          mountPath: "/var/lib/rabbitmq/mnesia"
        env:
        - name: RABBIT_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: RABBIT_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: RABBITMQ_NODENAME
          value: "rabbit@$(RABBIT_POD_NAME).rabbit.$(RABBIT_POD_NAMESPACE).svc.cluster.local"
        - name: RABBITMQ_USE_LONGNAME
          value: "true"
        - name: RABBITMQ_CONFIG_FILE
          value: "/etc/rabbitmq/rabbitmq.conf" 
        - name: RABBITMQ_ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              name: rabbit-secret
              key: RABBITMQ_ERLANG_COOKIE
        ports:
        - containerPort: 4369
          name: discovery
          protocol: TCP
        - containerPort: 5672
          name: amqp
          protocol: TCP
        - containerPort: 15672
          name: management
          protocol: TCP
        - containerPort: 15692
          name: prometheus
          protocol: TCP
        livenessProbe:
          exec:
            command: ["rabbitmq-diagnostics", "status"]
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 15
        readinessProbe:
          exec:
            command: ["rabbitmq-diagnostics", "ping"]
          initialDelaySeconds: 20
          periodSeconds: 60
          timeoutSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: rabbit
  namespace: rabbit
spec:
  clusterIP: None
  ports:
  - name: discovery
    port: 4369
    protocol: TCP
    targetPort: 4369
  - name: amqp
    port: 5672
    protocol: TCP
    targetPort: 5672
  - name: management
    port: 15672
    protocol: TCP
    targetPort: 15672
  - name: prometheus
    port: 15692
    protocol: TCP
  selector:
    app: rabbitmq
